% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_steep_gen.R
\name{simple_steep_gen}
\alias{simple_steep_gen}
\title{generate dominance matrix with specified steepness}
\usage{
simple_steep_gen(n_ind, n_int, steep, id_bias = TRUE, rank_bias = TRUE)
}
\arguments{
\item{n_ind}{integer, the number of individuals}

\item{n_int}{integer, the number of interactions}

\item{steep}{numeric (between 0 and 1), the desired steepness value}

\item{id_bias}{logical, should some individuals be more observed than others
(default is \code{TRUE}). Can also be a numeric of the same length as
\code{n_ind} with actual weights.}

\item{rank_bias}{logical, should closer ranked dyads interact more often than
dyads that are more distant in rank (default is \code{TRUE})}
}
\value{
a list with the first item being the interactions in sequence form,
the second item as matrix and the last a list with input settings
}
\description{
generate dominance matrix with specified steepness
}
\examples{
res <- simple_steep_gen(n_ind = 5, n_int = 30, steep = 0.99)
res$sequence
res$matrix

# with prespecified weights
res <- simple_steep_gen(n_ind = 5,
                        n_int = 100,
                        steep = 0.95,
                        rank_bias = TRUE,
                        id_bias = c(1, 0.1, 0.1, 0.1, 0.1))
res$matrix

library(EloRating)
steeps <- runif(20, 0, 1)
nids <- sample(6:10, length(steeps), TRUE)
mats <- sapply(1:length(steeps), function(x) {
  simple_steep_gen(nids[x], nids[x] ^ 2.5, steeps[x], FALSE)[[2]]
 })
obs_steeps <- unlist(lapply(mats, function(x)steepness(x)[1]))
plot(steeps, obs_steeps, xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1)
}
